from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text
import aiogram.utils.markdown as fmt

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
import urlextract

from loader import dp, bot
from config.config import admin_id
from keyboards.keyboard import  key_k_1, key_k_0, key_k_2, main_menu, cancel_btn, main_menu_admin_1

from db.db_api import add_user, count_user, get_articles, get_callback, get_callback_articles

#......................–ö–û–ú–ê–ù–î–ê –°–¢–ê–†–¢......................
async def cmd_start(message: types.Message):
    photo_main = open('image/cryptolib.png', 'rb')
    if message.from_user.id == admin_id:   
        await message.answer_photo(caption="<b>üìö–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CryptoLib, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Ç–∏—à–∏–Ω—Éü§´</b>",photo=photo_main, reply_markup=main_menu_admin_1)
    else:
        await message.answer_photo(caption="<b>üìö–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CryptoLib, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Ç–∏—à–∏–Ω—Éü§´</b>",photo=photo_main, reply_markup=main_menu)
    if message.from_user.id != admin_id:
        add_user(message.from_user.id)


#......................–ö–ù–û–ü–ö–ê –ò–ù–§–û......................
async def btn_info(message: types.Message):
    photo_main = open('image/info.png', 'rb')
    await message.answer_photo(caption=f"<b>üìöCryptoLibüí∏ - –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –ø–æ–¥ —Ä—É–∫–æ–πüî•\n\nüë®‚Äçüë®‚Äçüë¶–ë–æ—Ç–æ–º —É–∂–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å {count_user()} —é–∑–µ—Ä–æ–≤ü§Ø\n\nüë®‚ÄçüöÄ–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å/–°–æ–∑–¥–∞—Ç–µ–ª—å - @VellBell69üßõ‚Äç‚ôÇÔ∏è\n\nüìé–û –±–∞–≥–∞—Ö, –æ—à–∏–±–∫–∞—Ö —Å–æ–æ–±—â–∞—Ç—å –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—é‚öôÔ∏è\n\nü§ó–Ø –±—É–¥—É –æ—á–µ–Ω—å —Ä–∞–¥ –µ—Å–ª–∏ –º–æ–π –±–æ—Ç, –±—ã–ª –≤–∞–º –ø–æ–ª–µ–∑–Ω—ã–º –∏ –ø–æ–º–æ–≥üññ\n\nüôÑ–ù–æ —Ç–∞–∫–∂–µ —è –±—É–¥—É –µ—â—ë –±–æ–ª—å—à–µ —Ä–∞–¥ –µ—Å–ª–∏ —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏—à—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤ —Ç–∞–∫–æ–µ –Ω–µ –ª—ë–≥–∫–æ–µ –≤—Ä–µ–º—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –ø–∞—Ä—É —à–µ–∫–µ–ª–µ–π –ø–æ –∞–¥—Ä–µ—Å–∞–º –Ω–∏–∂–µ‚¨áÔ∏è(–æ—Ç–ø—Ä–∞–≤–∏—à—å—Å—è –≤–æ –≤–∫–ª–∞–¥–∫—É –°–ø–æ–Ω—Å–æ—Ä—ã)üò≥</b>", photo=photo_main)
    await message.answer(text="<b>ü¶äMetamask - </b><code>0xd47020C697001CA045b9B10c7883Ff768b567ff1</code>‚†Ä\n\n<b>‚õÑÔ∏èPhantom - </b><code>7qy9TNesDMwHniqo8BKTPm7yZ71YghkBD1aYBRBN9eEX</code>\n\n<b>üíéTronLink - </b><code>TKzhJrZgjq7q4LM95igjJPiJRtCfkTjs71</code>")

#......................–ö–ù–û–ü–ö–ê –°–ü–û–ù–°–û–†–´......................
async def btn_sponsor(message: types.Message):
    photo_main = open('image/sponsors.png', 'rb')
    await message.answer_photo(caption="<b>C–ø–æ–Ω—Å–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üòî</b>", photo=photo_main)

#......................–ö–ù–û–ü–ö–ê –ö–ê–¢–ê–õ–û–ì......................
#–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥
async def btn_katalog(message: types.Message):
    photo_main = open('image/catalog.png', 'rb')
    await message.answer_photo(photo=photo_main)
    await message.answer(text="<b>üç≠–ö–∞—Ç–∞–ª–æ–≥ —Å—Ç–∞—Ç–µ–π, –º–∞–Ω—É–∞–ª–æ–≤ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Åüç¢‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n\n–ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–∞–∫—É—é –ª–∏–±–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ª–∏–±–æ –≤ –ø–æ—Å—Ç, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ 10–º–∏–Ω.</b>", reply_markup=key_k_0())

#–û—Ç–∫—Ä—ã—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def btn_kategory(call: types.CallbackQuery):
    data = call.data
    await call.message.edit_text("<b>üç≠–ö–∞—Ç–∞–ª–æ–≥ —Å—Ç–∞—Ç–µ–π, –º–∞–Ω—É–∞–ª–æ–≤ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Åüç¢‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä\n\n–ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–∞–∫—É—é –ª–∏–±–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ª–∏–±–æ –≤ –ø–æ—Å—Ç, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ 10–º–∏–Ω.</b>", reply_markup=key_k_1(data)) 
    await call.answer()

#–û—Ç–∫—Ä—ã—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏
async def btn_article(call: types.CallbackQuery):
    data = get_articles(call.data)
    name = data[0][3]
    avtor = data[0][4]
    description = data[0][6]
    link = data[0][5]
    await call.message.edit_text(f"<b>{fmt.hide_link(link)}{name}\n\nüë®‚ÄçüöÄ–ê–≤—Ç–æ—Ä: {avtor}\n\nüìú{description}</b>", reply_markup=key_k_2(call.data))
    


#–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
async def btn_back_lvl0(call: types.CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=key_k_0()) 
    await call.answer()







# .....................–ö–ù–û–ü–ö–ê –ü–†–ï–î–õ–û–ñ–ò–¢–¨ –ú–ê–¢–ï–†–ò–ê–õ......................
extractor = urlextract.URLExtract()

class HelpUs(StatesGroup):
    waiting_for_link = State()

async def btn_help_us(message: types.Message):
    photo_main = open('image/material.png', 'rb')
    await message.answer_photo(photo=photo_main, caption="<b>–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª üòÅ</b>",reply_markup=cancel_btn )
    await HelpUs.waiting_for_link.set()

async def send_to_admin(message: types.Message, state: FSMContext):
    urls = extractor.find_urls(message.text)
    if message.text != "‚ùå–û—Ç–º–µ–Ω–∏—Ç—å":
        if urls == []:
            await message.answer("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å <u>—Å—Å—ã–ª–∫–æ–π</u>üôèüèª</b>")
            return
            
        await bot.send_message(admin_id, f"<b>@{message.from_user.username}, –ø—Ä–µ–¥–ª–æ–∂–∏–ª {message.text}</b>")
        await message.answer("<b>–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å ‚ò∫Ô∏è</b>", reply_markup=main_menu)
    await state.finish()

async def btn_cancel(message: types.Message, state:FSMContext):
    if message.from_user.id == admin_id:
        await message.reply("<b>–ñ–¥—ë–º —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üôÑ</b>",reply_markup=main_menu_admin_1 )
    else:
        await message.reply("<b>–ñ–¥—ë–º —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üôÑ</b>",reply_markup=main_menu ) 
    await state.finish()

#......................–ü–û–î–ü–ò–°–ö–ê –ù–ê –ë–û–¢–ê......................

async def subscribe(message: types.Message):
    await message.reply("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")

async def unsubscribe(message: types.Message):
    await message.reply("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")


#......................–†–ï–ì–¢–°–¢–†–ê–¶–ò–Ø –•–ï–ù–î–õ–ï–†–û–í......................
def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start")
    dp.register_message_handler(btn_info, Text(equals="üíé–ò–Ω—Ñ–æ/–ö–æ–Ω—Ç–∞–∫—Ç"))
    dp.register_message_handler(btn_sponsor, Text(equals="üòé–°–ø–æ–Ω—Å–æ—Ä—ã"))

    dp.register_message_handler(btn_katalog, Text(equals="üóÇ–ö–∞—Ç–∞–ª–æ–≥"))
    dp.register_callback_query_handler(btn_kategory, Text(equals=get_callback()))
    dp.register_callback_query_handler(btn_article, Text(equals=get_callback_articles()))
    dp.register_callback_query_handler(btn_back_lvl0, Text(equals="back_to_lvl_0"))

    dp.register_message_handler(btn_cancel, Text(equals="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å"), state="*")
    dp.register_message_handler(btn_help_us, Text(equals="üíÅ–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª"))
    dp.register_message_handler(send_to_admin, state=HelpUs.waiting_for_link)

    dp.register_message_handler(subscribe, commands="subscribe")
    dp.register_message_handler(unsubscribe, commands="unsubscribe")