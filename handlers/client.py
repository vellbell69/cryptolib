from email import message
from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text
import aiogram.utils.markdown as fmt

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
import urlextract
from keyboards.katalog import article_kb, article_kb_info, category_kb

from loader import dp, bot
from config.config import admin_id
from keyboards.keyboard import main_menu, cancel_btn, main_menu_admin_1

from db.db_api import add_user, article_data, category, count_user

#......................–ö–û–ú–ê–ù–î–ê –°–¢–ê–†–¢......................
async def cmd_start(message: types.Message):
    photo_main = open('image/cryptolib.png', 'rb')
    if message.from_user.id == admin_id:   
        await message.answer_photo(caption="<b>üìö–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CryptoLib, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Ç–∏—à–∏–Ω—Éü§´</b>",photo=photo_main, reply_markup=main_menu_admin_1)
    else:
        await message.answer_photo(caption="<b>üìö–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CryptoLib, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Ç–∏—à–∏–Ω—Éü§´</b>",photo=photo_main, reply_markup=main_menu)
    if message.from_user.id != admin_id:
        add_user(message.from_user.id)


#......................–ö–ù–û–ü–ö–ê –ò–ù–§–û......................
async def btn_info(message: types.Message):
    photo_main = open('image/info.png', 'rb')
    await message.answer_photo(caption=f"<b>üìöCryptoLibüí∏ - –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –ø–æ–¥ —Ä—É–∫–æ–πüî•\n\nüë®‚Äçüë®‚Äçüë¶–ë–æ—Ç–æ–º —É–∂–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å {count_user()} —é–∑–µ—Ä–æ–≤ü§Ø\n\nüë®‚ÄçüöÄ–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å/–°–æ–∑–¥–∞—Ç–µ–ª—å - @VellBell69üßõ‚Äç‚ôÇÔ∏è\n\nüìé–û –±–∞–≥–∞—Ö, –æ—à–∏–±–∫–∞—Ö —Å–æ–æ–±—â–∞—Ç—å –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—é‚öôÔ∏è\n\nü§ó–Ø –±—É–¥—É –æ—á–µ–Ω—å —Ä–∞–¥ –µ—Å–ª–∏ –º–æ–π –±–æ—Ç, –±—ã–ª –≤–∞–º –ø–æ–ª–µ–∑–Ω—ã–º –∏ –ø–æ–º–æ–≥üññ\n\nüôÑ–ù–æ —Ç–∞–∫–∂–µ —è –±—É–¥—É –µ—â—ë –±–æ–ª—å—à–µ —Ä–∞–¥ –µ—Å–ª–∏ —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏—à—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤ —Ç–∞–∫–æ–µ –Ω–µ –ª—ë–≥–∫–æ–µ –≤—Ä–µ–º—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –ø–∞—Ä—É —à–µ–∫–µ–ª–µ–π –ø–æ –∞–¥—Ä–µ—Å–∞–º –Ω–∏–∂–µ‚¨áÔ∏è(–æ—Ç–ø—Ä–∞–≤–∏—à—å—Å—è –≤–æ –≤–∫–ª–∞–¥–∫—É –°–ø–æ–Ω—Å–æ—Ä—ã)üò≥</b>", photo=photo_main)
    await message.answer(text="<b>ü¶äMetamask - </b><code>0xd47020C697001CA045b9B10c7883Ff768b567ff1</code>‚†Ä\n\n<b>‚õÑÔ∏èPhantom - </b><code>7qy9TNesDMwHniqo8BKTPm7yZ71YghkBD1aYBRBN9eEX</code>\n\n<b>üíéTronLink - </b><code>TKzhJrZgjq7q4LM95igjJPiJRtCfkTjs71</code>")

#......................–ö–ù–û–ü–ö–ê –°–ü–û–ù–°–û–†–´......................
async def btn_sponsor(message: types.Message):
    photo_main = open('image/sponsors.png', 'rb')
    await message.answer_photo(caption="<b>C–ø–æ–Ω—Å–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üòî</b>", photo=photo_main)

# .....................–ö–ù–û–ü–ö–ê –ü–†–ï–î–õ–û–ñ–ò–¢–¨ –ú–ê–¢–ï–†–ò–ê–õ......................
extractor = urlextract.URLExtract()

class HelpUs(StatesGroup):
    waiting_for_link = State()

async def btn_help_us(message: types.Message):
    photo_main = open('image/material.png', 'rb')
    await message.answer_photo(photo=photo_main, caption="<b>–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª üòÅ</b>",reply_markup=cancel_btn )
    await HelpUs.waiting_for_link.set()

async def send_to_admin(message: types.Message, state: FSMContext):
    urls = extractor.find_urls(message.text)
    if message.text != "‚ùå–û—Ç–º–µ–Ω–∏—Ç—å":
        if urls == []:
            await message.answer("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å <u>—Å—Å—ã–ª–∫–æ–π</u>üôèüèª</b>")
            return
            
        await bot.send_message(admin_id, f"<b>@{message.from_user.username}, –ø—Ä–µ–¥–ª–æ–∂–∏–ª {message.text}</b>")
        await message.answer("<b>–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å ‚ò∫Ô∏è</b>", reply_markup=main_menu)
    await state.finish()

async def btn_cancel(message: types.Message, state:FSMContext):
    if message.from_user.id == admin_id:
        await message.reply("<b>–ñ–¥—ë–º —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üôÑ</b>",reply_markup=main_menu_admin_1 )
    else:
        await message.reply("<b>–ñ–¥—ë–º —Ç–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üôÑ</b>",reply_markup=main_menu ) 
    await state.finish()

#......................–ö–ù–û–ü–ö–ê –ö–ê–¢–ê–õ–û–ì......................
async def btn_catalog(message: types.Message):
    photo_main = open('image/catalog.png', 'rb')
    await message.answer_photo(photo=photo_main)
    await message.answer(text="<b>üç≠–ö–∞—Ç–∞–ª–æ–≥ —Å—Ç–∞—Ç–µ–π, –º–∞–Ω—É–∞–ª–æ–≤ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Åüç¢‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä</b>", reply_markup=category_kb())

async def btn_category(call: types.CallbackQuery):
    category_id = call.data
    await call.message.edit_reply_markup(reply_markup=article_kb(category_id))
    await call.answer()



async def btn_article(call: types.CallbackQuery):
    article_id = call.data
    id = article_id[article_id.find(":") + 1 : ]
    data = article_data(id)
    await call.message.edit_text(f"<b>{fmt.hide_link(data[0][5])}{data[0][2]}\n\nüë®‚ÄçüöÄ–ê–≤—Ç–æ—Ä: {data[0][3]}\n\nüìú{data[0][4]}</b>", reply_markup=(article_kb_info(id)))
    await call.answer()

async def btn_back_lvl_0(call: types.CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=category_kb())

async def btn_back_lvl_1(call: types.CallbackQuery):
    key = call.data
    id = key[key.find(":") + 1 : ]
    await call.message.edit_text("<b>üç≠–ö–∞—Ç–∞–ª–æ–≥ —Å—Ç–∞—Ç–µ–π, –º–∞–Ω—É–∞–ª–æ–≤ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Åüç¢‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä</b>", reply_markup=article_kb(id))

#......................–†–ï–ì–¢–°–¢–†–ê–¶–ò–Ø –•–ï–ù–î–õ–ï–†–û–í......................
def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands="start")
    dp.register_message_handler(btn_info, Text(equals="üíé–ò–Ω—Ñ–æ/–ö–æ–Ω—Ç–∞–∫—Ç"))
    dp.register_message_handler(btn_sponsor, Text(equals="üòé–°–ø–æ–Ω—Å–æ—Ä—ã"))

    dp.register_message_handler(btn_catalog, Text(equals="üóÇ–ö–∞—Ç–∞–ª–æ–≥"))
    dp.register_callback_query_handler(btn_category, Text(equals=category("call_get")))
    dp.register_callback_query_handler(btn_article, Text(startswith="article_get"))
    dp.register_callback_query_handler(btn_back_lvl_0, Text(equals="back_to_lvl_0"))
    dp.register_callback_query_handler(btn_back_lvl_1, Text(startswith="back_to_lvl_1"))

    dp.register_message_handler(btn_cancel, Text(equals="‚ùå–û—Ç–º–µ–Ω–∏—Ç—å"), state="*")
    dp.register_message_handler(btn_help_us, Text(equals="üíÅ–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª"))
    dp.register_message_handler(send_to_admin, state=HelpUs.waiting_for_link)